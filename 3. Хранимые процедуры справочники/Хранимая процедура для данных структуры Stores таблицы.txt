CREATE PROCEDURE InsertStoresFromXml
    @FilePath NVARCHAR(255)  -- Параметр для пути к файлу XML
AS
BEGIN
    -- Логирование начала загрузки
    PRINT 'Загрузка данных начата...';

    BEGIN TRY
        DECLARE @xmlData XML;
        DECLARE @sql NVARCHAR(MAX);

        -- Формируем динамический SQL для чтения файла
        SET @sql = N'SELECT @xmlData = BulkColumn
                    FROM OPENROWSET(BULK ''' + @FilePath + ''', SINGLE_BLOB) AS FileContent;';

        -- Выполняем динамический SQL
        EXEC sp_executesql @sql, N'@xmlData XML OUTPUT', @xmlData OUTPUT;

        -- Вставка данных в таблицу
        INSERT INTO dbo.Stores (
            id,  -- Добавлен столбец ID
            headquerter_id,
            location_id,
            external_id,
            organisation_id,
            manager_user_id,
            main_store_id,
            open_time,
            close_time,
            created_date,
            last_update_date,
            number,
            name,
            address,
            phone,
            created_by,
            last_update_by,
            flag24hours,
            lat,
            lon,
            minusale,
            show_in_shop,
            attribute1,
            attribute2,
            attribute3,
            attribute4,
            attribute5,
            attribute6,
            attribute7,
            attribute8,
            attribute9,
            attribute10,
            attribute11,
            attribute12,
            attribute13,
            attribute14,
            attribute15,
            vat_mandatory_flag,
            primarybase,
            location_name
        )
        SELECT 
            warehouses.value('(id)[1]', 'INT'),  -- Чтение значения id из XML
            warehouses.value('(headquerter_id)[1]', 'NVARCHAR(255)'),
            warehouses.value('(location_id)[1]', 'NVARCHAR(255)'),
            warehouses.value('(external_id)[1]', 'NVARCHAR(255)'),
            warehouses.value('(organisation_id)[1]', 'NVARCHAR(255)'),
            warehouses.value('(manager_user_id)[1]', 'NVARCHAR(255)'),
            warehouses.value('(main_store_id)[1]', 'NVARCHAR(255)'),
            TRY_CONVERT(TIME, warehouses.value('(open_time)[1]', 'NVARCHAR(30)'), 120),
            TRY_CONVERT(TIME, warehouses.value('(close_time)[1]', 'NVARCHAR(30)'), 120),
            TRY_CONVERT(DATETIME, warehouses.value('(created_date)[1]', 'NVARCHAR(255)'), 120),
            TRY_CONVERT(DATETIME, warehouses.value('(last_update_date)[1]', 'NVARCHAR(255)'), 120),
            warehouses.value('(number)[1]', 'NVARCHAR(255)'),
            warehouses.value('(name)[1]', 'NVARCHAR(255)'),
            warehouses.value('(address)[1]', 'NVARCHAR(255)'),
            warehouses.value('(phone)[1]', 'NVARCHAR(255)'),
            warehouses.value('(created_by)[1]', 'NVARCHAR(255)'),
            warehouses.value('(last_update_by)[1]', 'NVARCHAR(255)'),
            warehouses.value('(flag24hours)[1]', 'NVARCHAR(255)'),
            warehouses.value('(lat)[1]', 'NVARCHAR(255)'),
            warehouses.value('(lon)[1]', 'NVARCHAR(255)'),
            warehouses.value('(minusale)[1]', 'NVARCHAR(255)'),
            warehouses.value('(show_in_shop)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute1)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute2)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute3)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute4)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute5)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute6)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute7)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute8)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute9)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute10)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute11)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute12)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute13)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute14)[1]', 'NVARCHAR(255)'),
            warehouses.value('(attribute15)[1]', 'NVARCHAR(255)'),
            warehouses.value('(vat_mandatory_flag)[1]', 'NVARCHAR(255)'),
            warehouses.value('(primary)[1]', 'NVARCHAR(255)'),
            warehouses.value('(location_name)[1]', 'NVARCHAR(255)')
        FROM @xmlData.nodes('/root/warehouses/warehouse') AS XMLData(warehouses);

        -- Логирование успешной загрузки
        PRINT 'Данные успешно загружены.';
    END TRY
    BEGIN CATCH
        -- Логирование ошибки
        PRINT 'Произошла ошибка при загрузке данных:';
        PRINT 'Сообщение об ошибке: ' + ERROR_MESSAGE();
        PRINT 'Номер ошибки: ' + CAST(ERROR_NUMBER() AS NVARCHAR(10));
        PRINT 'Серьезность ошибки: ' + CAST(ERROR_SEVERITY() AS NVARCHAR(10));
        PRINT 'Состояние ошибки: ' + CAST(ERROR_STATE() AS NVARCHAR(10));
        PRINT 'Ошибка на строке: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        PRINT 'Ошибка в процедуре: ' + ERROR_PROCEDURE();
    END CATCH
END;