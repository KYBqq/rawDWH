CREATE PROCEDURE InsertGoodsFromXml
    @FilePath NVARCHAR(255)  -- Параметр для пути к файлу XML
AS
BEGIN
    -- Логирование начала загрузки
    PRINT 'Загрузка данных начата...'

    BEGIN TRY
        DECLARE @xmlData XML;
        DECLARE @sql NVARCHAR(MAX);

        -- Формируем динамический SQL для чтения файла
        SET @sql = N'SELECT @xmlData = BulkColumn
                    FROM OPENROWSET(BULK ''' + @FilePath + ''', SINGLE_BLOB) AS FileContent;';

        -- Выполняем динамический SQL
        EXEC sp_executesql @sql, N'@xmlData XML OUTPUT', @xmlData OUTPUT;

        -- Вставка данных в таблицу
        INSERT INTO dbo.Goods (
            id,
            external_id,
            group_ids,
            group_ext_ids,
            manufacturer_id,
            html_template_id,
            barcodes,
            created_date,
            last_update_date,
            name,
            description,
            article,
            enabled,
            sales_weight,
            volume,
            type,
            weight_good_flag,
            not_show_in_shop,
            vat_percent,
            attribute1,
            attribute2,
            attribute3,
            attribute4,
            attribute5,
            attribute6,
            attribute7,
            attribute8,
            attribute9,
            attribute10,
            attribute11,
            attribute12,
            attribute13,
            attribute14,
            attribute15
        )
        SELECT 
            TRY_CAST(items.value('(id)[1]', 'NVARCHAR(50)') AS INT),                        
            items.value('(external_id)[1]', 'NVARCHAR(50)'),      
            items.value('(group_ids)[1]', 'NVARCHAR(100)'),       
            items.value('(group_ext_ids)[1]', 'NVARCHAR(100)'),   
            TRY_CAST(items.value('(manufacturer_id)[1]', 'NVARCHAR(50)') AS INT),           
            items.value('(html_template_id)[1]', 'NVARCHAR(50)'), 
            items.value('(barcodes)[1]', 'NVARCHAR(50)'),         
            TRY_CONVERT(DATETIME, items.value('(created_date)[1]', 'NVARCHAR(20)'), 120),  -- Конвертация created_date     
            TRY_CONVERT(DATETIME, items.value('(last_update_date)[1]', 'NVARCHAR(20)'), 120), -- Конвертация last_update_date, 
            items.value('(name)[1]', 'NVARCHAR(255)'),            
            items.value('(description)[1]', 'NVARCHAR(500)'),     
            items.value('(article)[1]', 'NVARCHAR(50)'),          
            TRY_CAST(items.value('(enabled)[1]', 'NVARCHAR(50)') AS BIT),                   
            TRY_CAST(items.value('(sales_weight)[1]', 'NVARCHAR(50)') AS DECIMAL(18, 2)),   
            TRY_CAST(items.value('(volume)[1]', 'NVARCHAR(50)') AS DECIMAL(18, 4)),         
            items.value('(type)[1]', 'NVARCHAR(1)'),              
            items.value('(weight_good_flag)[1]', 'NVARCHAR(1)'),  
            TRY_CAST(items.value('(not_show_in_shop)[1]', 'NVARCHAR(50)') AS BIT),          
            TRY_CAST(items.value('(vat_percent)[1]', 'NVARCHAR(50)') AS INT),               
            items.value('(attribute1)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute2)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute3)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute4)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute5)[1]', 'NVARCHAR(100)'),      
            items.value('(attribute6)[1]', 'NVARCHAR(100)'),      
            items.value('(attribute7)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute8)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute9)[1]', 'NVARCHAR(50)'),       
            items.value('(attribute10)[1]', 'NVARCHAR(50)'),      
            items.value('(attribute11)[1]', 'NVARCHAR(100)'),     
            TRY_CAST(items.value('(attribute12)[1]', 'NVARCHAR(50)') AS INT),      
            TRY_CAST(items.value('(attribute13)[1]', 'NVARCHAR(50)') AS INT),      
            TRY_CAST(items.value('(attribute14)[1]', 'NVARCHAR(50)') AS INT),      
            items.value('(attribute15)[1]', 'NVARCHAR(50)')       
        FROM @xmlData.nodes('/root/items/item') AS XMLData(items);

        -- Логирование успешной загрузки
        PRINT 'Данные успешно загружены.';
    END TRY
    BEGIN CATCH
        -- Логирование ошибки
        PRINT 'Произошла ошибка при загрузке данных:';
        PRINT 'Сообщение об ошибке: ' + ERROR_MESSAGE();
        PRINT 'Номер ошибки: ' + CAST(ERROR_NUMBER() AS NVARCHAR(10));
        PRINT 'Серьезность ошибки: ' + CAST(ERROR_SEVERITY() AS NVARCHAR(10));
        PRINT 'Состояние ошибки: ' + CAST(ERROR_STATE() AS NVARCHAR(10));
        PRINT 'Ошибка на строке: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        PRINT 'Ошибка в процедуре: ' + ERROR_PROCEDURE();
    END CATCH
END;